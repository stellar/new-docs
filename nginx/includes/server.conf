root /usr/share/nginx/html/new-docs/;

# FYI: Redirect breaks
location /api {
  rewrite "^/api$" $scheme://$http_host/api/ permanent;
  rewrite "^/api/(.*)$" /$1 last;
}

location / {
  try_files /public/$uri /public/$uri/index.html /static/$uri =404;
}

# explicit 301 redirects
location = /software/known-issues.html {
    return 301 https://github.com/stellar/go/issues;
}

# .+ (vs .*) is important to avoid a redirect loop when rewriting all
# non-crawler requests to `/api/`
# location ~* ^/api/(?<path>.+)$ {
#   set $noJs false;
#   set $needsCrawlerRedirect '';

#   if ($arg_javascript = 'false') {
#     set $noJs true;
#   }
#   if ($noJs = true) {
#     rewrite ^/api/(.*) /no-js/api/$1;
#   }
#   if ($noJs = false) {
#     rewrite ^/api/.*$ /api/;
#   }
#   # SEO optimization for API Reference. This lets crawlers only see the content
#   # from each individual section.
#   # UA check sourced from https://gist.github.com/thoop/8165802
#   if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
#     # Goofy variable value because nginx doesn't allow for checking multiple
#     # conditions in an `if` block.
#     set $needsCrawlerRedirect 'true $noJs';
#   }
#   # To avoid a redirect loop, we only redirect if it's not already on the no-js
#   # request path.
#   if ($needsCrawlerRedirect = 'true false') {
#     return 302 $scheme://$http_host/api/$path?javascript=false;
#   }
# }